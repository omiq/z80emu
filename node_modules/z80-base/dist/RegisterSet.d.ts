import { Register } from "./Register.js";
/**
 * All registers in a Z80.
 */
export declare class RegisterSet {
    af: number;
    bc: number;
    de: number;
    hl: number;
    afPrime: number;
    bcPrime: number;
    dePrime: number;
    hlPrime: number;
    ix: number;
    iy: number;
    sp: number;
    pc: number;
    memptr: number;
    i: number;
    r: number;
    r7: number;
    iff1: number;
    iff2: number;
    im: number;
    halted: number;
    get a(): number;
    set a(value: number);
    get f(): number;
    set f(value: number);
    get b(): number;
    set b(value: number);
    get c(): number;
    set c(value: number);
    get d(): number;
    set d(value: number);
    get e(): number;
    set e(value: number);
    get h(): number;
    set h(value: number);
    get l(): number;
    set l(value: number);
    get ixh(): number;
    set ixh(value: number);
    get ixl(): number;
    set ixl(value: number);
    get iyh(): number;
    set iyh(value: number);
    get iyl(): number;
    set iyl(value: number);
    /**
     * Combine the two R parts together.
     */
    get rCombined(): number;
    /**
     * Get a register by name.
     */
    getValue(registerName: Register): number;
}
/**
 * All real fields of RegisterSet, for enumeration.
 */
export declare const registerSetFields: Register[];
//# sourceMappingURL=RegisterSet.d.ts.map