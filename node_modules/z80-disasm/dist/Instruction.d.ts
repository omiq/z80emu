export declare class Instruction {
    /**
     * Address of instruction.
     */
    address: number;
    /**
     * Raw binary as found in the original.
     */
    bin: number[];
    /**
     * Mnemonic of the instruction (e.g., "ld").
     */
    mnemonic: string;
    /**
     * Parameters to the instruction (e.g., ["hl","nnnn"]).
     */
    params: string[];
    /**
     * Arguments to the instruction (e.g., ["hl","0x1234"]).
     */
    args: string[];
    /**
     * Label at this address.
     */
    label: string | undefined;
    /**
     * Target of a jump from this instruction.
     */
    jumpTarget: number | undefined;
    /**
     * Whether this is an executable instruction (op-code). If false, then this is a .byte or .text
     * data instruction.
     */
    readonly isExecutable: boolean;
    /**
     * Some instructions (like RST 8 on the TRS-80) gobble up data after the instruction. This field
     * records how many such bytes there are, so we don't try to decoded them.
     */
    additionalDataLength: number;
    constructor(address: number, bin: number[], mnemonic: string, params: string[] | undefined, args: string[], isExecutable: boolean);
    /**
     * Text version of the binary: two-digit hex numbers separated by a space.
     */
    binText(): string;
    /**
     * Text of the instruction (e.g., "ld hl,0x1234").
     */
    toText(): string;
    /**
     * Replace all instances of "varName" in the args field with a replacement.
     */
    replaceArgVariable(varName: string, replacement: string): void;
    /**
     * Whether this instruction, when executed, potentially continues on to the next instructions. For example,
     * "nop" and "jr z,foo" return true, but "ret" and "jr foo" return false.
     */
    continues(): boolean;
    /**
     * Get address of next instruction directly after this one, or undefined if this instruction
     * does not continue (see {@link continues}). This is normally the instructions's address plus
     * the number of bytes in the instruction, but may be longer if the instruction is known to
     * eat up additional bytes.
     */
    continuesAt(): number | undefined;
}
//# sourceMappingURL=Instruction.d.ts.map